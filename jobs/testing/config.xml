<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.9">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.23">
    <script>node {
    wrap([$class: &apos;TimestamperBuildWrapper&apos;]) {
        timeout(time: 6, unit: &apos;HOURS&apos;) {
            ws {
                stage(&apos;Cleanup&apos;) {
                    deleteDir()
                }
                dir(&apos;site&apos;) {
                    stage(&apos;Checkout site.conf&apos;) {
                        //checkout([$class: &apos;GitSCM&apos;, userRemoteConfigs: [[url: &apos;https://github.com/chris1911/site-ffka&apos;]], branches: [[name: &apos;refs/tags/v0.2.90-stable.1&apos;]]])
                        checkout([$class: &apos;GitSCM&apos;, userRemoteConfigs: [[url: &apos;https://github.com/chris1911/site-ffka&apos;]], branches: [[name: &apos;master&apos;]]])
                    }

                    env.gluonBranch = sh([returnStdout: true, script: &apos;make -f jenkins.mk gluonbranch&apos;])
                    echo env.gluonbranch
                }
                
                dir(&apos;ffka&apos;) {
                    stage(&apos;Checkout gluon&apos;) {
                        def branchName = &apos;refs/tags/&apos; + env.gluonBranch
                        echo branchName
                        checkout([$class: &apos;GitSCM&apos;, userRemoteConfigs: [[url: &apos;https://github.com/freifunk-gluon/gluon&apos;]], branches: [[name: branchName]]])
                        sh &quot;ln -s ../site ./site&quot;
                    }
                    
                    stage(&apos;Update sub projects&apos;) {
                        sh &quot;make update&quot;
                    }
                    
                    def counter = 0
                    
                    def gluontargets = sh &quot;make -f site/jenkins.mk targets&quot;
                    gluontargets.each { target -&gt; 
                        stagename = &apos;Build &apos; + target
                        stage(stagename) {
                            env.GLUON_TARGET = target
                            sh &quot;make -j \$(nproc) clean&quot;
                            sh &quot;make -j \$(nproc)&quot;
                        }
                        
                        ++counter
                        if (counter == 3) {
                            break exit
                        }
                    }
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
</flow-definition>